name: X-JPackage

on:
  workflow_call:
    inputs:
      project-version:
        required: true
        type: string
      project-effective-version:
        required: true
        type: string

permissions:
  contents: read

jobs:
  jpackage:
    name: '${{ matrix.job.os }}'
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest,    platform: linux-x86_64,   platformReplaced: linux-x86_64   }
          - { os: ubuntu-22.04-arm, platform: linux-aarch_64, platformReplaced: linux-aarch64  }
          - { os: macos-15-intel,   platform: osx-x86_64,     platformReplaced: osx-x86_64     }
          - { os: macos-15,         platform: osx-aarch_64,   platformReplaced: osx-aarch64    }
          - { os: windows-latest,   platform: windows-x86_64, platformReplaced: windows-x86_64 }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v5
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Expand jlink
        shell: bash
        run: |
          cd out/jreleaser/assemble/jreleaser-standalone/jlink
          ls -l
          unzip -q -d work-${{ matrix.job.platform }} jreleaser-standalone-${{ inputs.project-effective-version }}-${{ matrix.job.platformReplaced }}.zip

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRO }}
          cache: gradle

      - name: Version
        if: endsWith(${{ inputs.project-version }}, '-SNAPSHOT') != true
        run: |
          echo ${{ inputs.project-version }} > VERSION

      - name: Jdks
        shell: bash
        run: ./gradlew :jreleaser:copyJdksFromCache :jreleaser:setupJdks

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      - name: Install WiX
        if: runner.os == 'Windows'
        run: dotnet tool install --global wix

      - name: Jpackage
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: assemble --assembler jpackage --select-current-platform
          setup-java: false
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.project-version }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-jpackage-${{ runner.os }}-${{ runner.arch }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Upload jpackage
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: jpackage-${{ runner.os }}-${{ runner.arch }}
          path: |
            out/jreleaser/assemble/jreleaser-installer/jpackage/*.pkg
            out/jreleaser/assemble/jreleaser-installer/jpackage/*.msi
            out/jreleaser/assemble/jreleaser-installer/jpackage/*.exe
            out/jreleaser/assemble/jreleaser-installer/jpackage/*.deb
            out/jreleaser/assemble/jreleaser-installer/jpackage/*.rpm

      - name: Stop Gradle daemon
        shell: bash
        run: ./gradlew -stop
